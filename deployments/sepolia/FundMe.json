{
  "address": "0x15f07419385572EA1321Ef2908b315DCdeB0325d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFee",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotContractOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x168e614f469fae000f17a3fa73e690a2ebde20ec8df0e540792ff44141f901ac",
  "receipt": {
    "to": null,
    "from": "0x3A6f34C74F9fcA88b511ecE42caa7A75B455812c",
    "contractAddress": "0x15f07419385572EA1321Ef2908b315DCdeB0325d",
    "transactionIndex": 0,
    "gasUsed": "778043",
    "logsBloom": "0x
    "blockHash": "0x5e4cb7a43fab78b285f6ee4dda4fc454e69ec566049265516adcd1c7f0b95d25",
    "transactionHash": "0x168e614f469fae000f17a3fa73e690a2ebde20ec8df0e540792ff44141f901ac",
    "logs": [],
    "blockNumber": 3086261,
    "cumulativeGasUsed": "778043",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "1526d27309c423ac3e05931b4da65cb4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFee\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotContractOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotContractOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public immutable owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    address public immutable priceFeed;\\n    \\n    constructor(address priceFee) {\\n        priceFeed = priceFee;\\n        owner = msg.sender;\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n\\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != owner) revert NotContractOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\",\"keccak256\":\"0x4eba4197ac6f5e462f5bae2a0536782efe7a659441d94bdf190801c5900dcae7\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(address priceFeed) internal view returns (uint256) {\\n        // Goerli ETH / USD Address\\n        // // https://docs.chain.link/docs/ethereum-addresses/\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        // );\\n        (, int256 answer, , , ) = AggregatorV3Interface(priceFeed).latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount, address priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x865ffdfa157da329bd2100f28fce283f2f925d136d2eee1f283ec1f9828b56ef\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b50604051610e7b380380610e7b83398181016040528101906100329190610103565b8073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050610130565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100d0826100a5565b9050919050565b6100e0816100c5565b81146100eb57600080fd5b50565b6000815190506100fd816100d7565b92915050565b600060208284031215610119576101186100a0565b5b6000610127848285016100ee565b91505092915050565b60805160a051610d18610163600039600081816101b801526105480152600081816102e3015261056c0152610d186000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e1565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107a4565b610521565b6040516100d891906107ea565b60405180910390f35b3480156100ed57600080fd5b506100f6610539565b60405161010391906107ea565b60405180910390f35b34801561011857600080fd5b50610121610546565b60405161012e9190610814565b60405180910390f35b34801561014357600080fd5b5061014c61056a565b6040516101599190610814565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e919061085b565b61058e565b6040516101a09190610814565b60405180910390f35b6802b5e3af16b18800006101e67f0000000000000000000000000000000000000000000000000000000000000000346105cd90919063ffffffff16565b1015610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e906108e5565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102759190610934565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610366576040517fbfcafd3700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104115760006001828154811061038c5761038b610968565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040990610997565b915050610369565b50600067ffffffffffffffff81111561042d5761042c6109df565b5b60405190808252806020026020018201604052801561045b5781602001602082028036833780820191505090505b506001908051906020019061047192919061069a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049890610a3f565b60006040518083038185875af1925050503d80600081146104d5576040519150601f19603f3d011682016040523d82523d6000602084013e6104da565b606091505b505090508061051e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051590610aa0565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061059e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d983610609565b90506000670de0b6b3a764000085836105f29190610ac0565b6105fc9190610b31565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610657573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067b9190610bef565b5050509150506402540be400816106929190610c6a565b915050919050565b828054828255906000526020600020908101928215610713579160200282015b828111156107125782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ba565b5b5090506107209190610724565b5090565b5b8082111561073d576000816000905550600101610725565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077182610746565b9050919050565b61078181610766565b811461078c57600080fd5b50565b60008135905061079e81610778565b92915050565b6000602082840312156107ba576107b9610741565b5b60006107c88482850161078f565b91505092915050565b6000819050919050565b6107e4816107d1565b82525050565b60006020820190506107ff60008301846107db565b92915050565b61080e81610766565b82525050565b60006020820190506108296000830184610805565b92915050565b610838816107d1565b811461084357600080fd5b50565b6000813590506108558161082f565b92915050565b60006020828403121561087157610870610741565b5b600061087f84828501610846565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b60006108cf601b83610888565b91506108da82610899565b602082019050919050565b600060208201905081810360008301526108fe816108c2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061093f826107d1565b915061094a836107d1565b925082820190508082111561096257610961610905565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006109a2826107d1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109d4576109d3610905565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a29600083610a0e565b9150610a3482610a19565b600082019050919050565b6000610a4a82610a1c565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a8a600b83610888565b9150610a9582610a54565b602082019050919050565b60006020820190508181036000830152610ab981610a7d565b9050919050565b6000610acb826107d1565b9150610ad6836107d1565b9250828202610ae4816107d1565b91508282048414831517610afb57610afa610905565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b3c826107d1565b9150610b47836107d1565b925082610b5757610b56610b02565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b8181610b62565b8114610b8c57600080fd5b50565b600081519050610b9e81610b78565b92915050565b6000819050919050565b610bb781610ba4565b8114610bc257600080fd5b50565b600081519050610bd481610bae565b92915050565b600081519050610be98161082f565b92915050565b600080600080600060a08688031215610c0b57610c0a610741565b5b6000610c1988828901610b8f565b9550506020610c2a88828901610bc5565b9450506040610c3b88828901610bda565b9350506060610c4c88828901610bda565b9250506080610c5d88828901610b8f565b9150509295509295909350565b6000610c7582610ba4565b9150610c8083610ba4565b9250828202610c8e81610ba4565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cc657610cc5610905565b5b8282058414831517610cdb57610cda610905565b5b509291505056fea2646970667358221220191620ac85f83393dec8ed8f67fb2e6af3ea93171d087a5949a8e0eeed111d6364736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e1565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107a4565b610521565b6040516100d891906107ea565b60405180910390f35b3480156100ed57600080fd5b506100f6610539565b60405161010391906107ea565b60405180910390f35b34801561011857600080fd5b50610121610546565b60405161012e9190610814565b60405180910390f35b34801561014357600080fd5b5061014c61056a565b6040516101599190610814565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e919061085b565b61058e565b6040516101a09190610814565b60405180910390f35b6802b5e3af16b18800006101e67f0000000000000000000000000000000000000000000000000000000000000000346105cd90919063ffffffff16565b1015610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e906108e5565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102759190610934565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610366576040517fbfcafd3700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104115760006001828154811061038c5761038b610968565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040990610997565b915050610369565b50600067ffffffffffffffff81111561042d5761042c6109df565b5b60405190808252806020026020018201604052801561045b5781602001602082028036833780820191505090505b506001908051906020019061047192919061069a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049890610a3f565b60006040518083038185875af1925050503d80600081146104d5576040519150601f19603f3d011682016040523d82523d6000602084013e6104da565b606091505b505090508061051e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051590610aa0565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061059e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d983610609565b90506000670de0b6b3a764000085836105f29190610ac0565b6105fc9190610b31565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610657573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067b9190610bef565b5050509150506402540be400816106929190610c6a565b915050919050565b828054828255906000526020600020908101928215610713579160200282015b828111156107125782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ba565b5b5090506107209190610724565b5090565b5b8082111561073d576000816000905550600101610725565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077182610746565b9050919050565b61078181610766565b811461078c57600080fd5b50565b60008135905061079e81610778565b92915050565b6000602082840312156107ba576107b9610741565b5b60006107c88482850161078f565b91505092915050565b6000819050919050565b6107e4816107d1565b82525050565b60006020820190506107ff60008301846107db565b92915050565b61080e81610766565b82525050565b60006020820190506108296000830184610805565b92915050565b610838816107d1565b811461084357600080fd5b50565b6000813590506108558161082f565b92915050565b60006020828403121561087157610870610741565b5b600061087f84828501610846565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b60006108cf601b83610888565b91506108da82610899565b602082019050919050565b600060208201905081810360008301526108fe816108c2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061093f826107d1565b915061094a836107d1565b925082820190508082111561096257610961610905565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006109a2826107d1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109d4576109d3610905565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a29600083610a0e565b9150610a3482610a19565b600082019050919050565b6000610a4a82610a1c565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a8a600b83610888565b9150610a9582610a54565b602082019050919050565b60006020820190508181036000830152610ab981610a7d565b9050919050565b6000610acb826107d1565b9150610ad6836107d1565b9250828202610ae4816107d1565b91508282048414831517610afb57610afa610905565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b3c826107d1565b9150610b47836107d1565b925082610b5757610b56610b02565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b8181610b62565b8114610b8c57600080fd5b50565b600081519050610b9e81610b78565b92915050565b6000819050919050565b610bb781610ba4565b8114610bc257600080fd5b50565b600081519050610bd481610bae565b92915050565b600081519050610be98161082f565b92915050565b600080600080600060a08688031215610c0b57610c0a610741565b5b6000610c1988828901610b8f565b9550506020610c2a88828901610bc5565b9450506040610c3b88828901610bda565b9350506060610c4c88828901610bda565b9250506080610c5d88828901610b8f565b9150509295509295909350565b6000610c7582610ba4565b9150610c8083610ba4565b9250828202610c8e81610ba4565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cc657610cc5610905565b5b8282058414831517610cdb57610cda610905565b5b509291505056fea2646970667358221220191620ac85f83393dec8ed8f67fb2e6af3ea93171d087a5949a8e0eeed111d6364736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}